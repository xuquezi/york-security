<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.york.dao.DepartmentMapper">
    <resultMap id="MyBaseResultMap" type="com.example.york.entity.Department">
        <id column="department_serial" property="departmentSerial" jdbcType="VARCHAR"></id>
        <result column="department_name" property="departmentName" jdbcType="VARCHAR"></result>
        <result column="department_create_time" property="departmentCreateTime" jdbcType="TIMESTAMP" />
        <result column="department_create_user" property="departmentCreateUser" jdbcType="VARCHAR" />
        <result column="department_update_time" property="departmentUpdateTime" jdbcType="TIMESTAMP" />
        <result column="department_update_user" property="departmentUpdateUser" jdbcType="VARCHAR" />
        <result column="delete_flag" property="deleteFlag" jdbcType="INTEGER"></result>
        <result column="department_desc" property="departmentDesc" jdbcType="VARCHAR"></result>
        <result column="parent_department_serial" property="parentDepartmentSerial" jdbcType="VARCHAR"></result>
        <result column="department_level" property="departmentLevel" jdbcType="VARCHAR"></result>
    </resultMap>

    <update id="updateDepartment" parameterType="com.example.york.entity.Department">
        UPDATE department_info SET
        department_name =  #{departmentName},
        department_create_time = #{departmentCreateTime},
        department_create_user = #{departmentCreateUser},
        department_update_time = #{departmentUpdateTime},
        department_desc = #{departmentDesc},
        parent_department_serial = #{parentDepartmentSerial},
        department_level = #{departmentLevel}
        WHERE department_serial = #{departmentSerial}
    </update>

    <select id="queryDepartmentListByPage" resultMap="MyBaseResultMap">
        SELECT d.department_serial,d.department_name,d.department_desc,
        d.department_create_time,d.department_create_user,d.department_update_time,d.department_update_user,d.department_level,d.parent_department_serial
        FROM department_info d
        WHERE 1 = 1
        and d.delete_flag = 0
        <if test="departmentName != null and departmentName!= ''" >
            and d.department_name like '%${departmentName}%'
        </if>
        order by d.department_update_time DESC
        Limit #{start},#{limit}
    </select>

    <select id="countDepartmentList" resultType="Integer">
        SELECT COUNT(1)
        FROM department_info d
        WHERE 1 = 1
        and d.delete_flag = 0
        <if test="departmentName != null and departmentName!= ''" >
            and d.department_name like '%${departmentName}%'
        </if>
    </select>

    <select id="queryDepartmentByLevel" resultMap="MyBaseResultMap">
        SELECT d.department_name,d.department_serial
        FROM department_info d
        where d.department_level=#{level}
        and d.delete_flag = 0
    </select>

    <select id="getDepartmentById" resultMap="MyBaseResultMap">
        SELECT *
        FROM department_info d
        where d.department_serial = #{departmentId}
        and d.delete_flag = 0
    </select>

    <insert id="createDepartment" parameterType="com.example.york.entity.Department">
        INSERT INTO department_info (department_serial,department_name,
        department_desc,delete_flag,department_create_user,department_create_time,parent_department_serial,department_level,department_update_time,department_update_user)
        VALUES (#{departmentSerial},#{departmentName},#{departmentDesc},#{deleteFlag},#{departmentCreateUser},
        #{departmentCreateTime},#{parentDepartmentSerial},#{departmentLevel},#{departmentUpdateTime},#{departmentUpdateUser})
    </insert>


    <select id="queryDepartmentList" resultMap="MyBaseResultMap">
        SELECT d.department_serial,d.department_name
        FROM department_info d
        WHERE d.delete_flag = 0
    </select>

    <select id="validDepartmentName" resultMap="MyBaseResultMap">
        select di.department_serial,di.department_name
        from department_info di
        where di.department_name = #{departmentName}
        and di.delete_flag = 0
    </select>

    <delete id="deleteDepartmentByDepartmentSerial">
        update department_info di set di.delete_flag = 1
        where di.department_serial = #{departmentId}
    </delete>

    <select id="queryDepartmentByParentSerial" resultMap="MyBaseResultMap">
        SELECT * from department_info di
        where di.parent_department_serial = #{parentDepartmentSerial}
        and di.delete_flag = 0
    </select>

</mapper>